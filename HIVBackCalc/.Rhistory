dir('data')
histories = load('data/KCsim.RData')
head(histories)
load('data/KCsim.RData')
head(kc)
load('data/KCsim.RData')
head(testhistories)
head(testhistories, 10)
load('data/KCsim.RData')
load('data/KCsim.RData')
head(KCsim)
source('R/model.R')
rm(list=ls())
setwd('/Users/jeanette/Dropbox/School/PhD/HIV_WA/public/package1.0/HIVBackCalc')
# Setup
load('data/KCsim.RData')
source('R/model.R')
source('R/tid.R')
library(HIVBackCalc)
library(reshape2)
library(ggplot2)
library(scales)
library(Hmisc)
data(KCsim)
head(KCsim)
diagInterval = 0.25
TIDs <- estimateTID(KCsim, intLength=diagInterval)
TIDs <- estimateTID(KCsim$infPeriod, intLength=diagInterval)
diagCounts = tabulateDiagnoses(KCsim, intLength=diagInterval)
incidenceBase = estimateIncidence(y=diagCounts,
pid=TIDs[['base_case']]$pdffxn,
gamma=0.1,
verbose=FALSE)
source('R/model.R')
source('R/model.R')
incidenceBase = estimateIncidence(y=diagCounts,
pid=TIDs[['base_case']]$pdffxn,
gamma=0.1,
verbose=FALSE)
incidenceBase
str(incidenceBase)
incidenceBase$lambda
incidenceBase$y
plot(incidenceBase$lambda)
plot(incidenceBase)
class(incidenceBase)
incidenceUpper = estimateIncidence(y=diagCounts,
pid=TIDs[['upper_bound']]$pdffxn,
gamma=0.1,
verbose=FALSE)
source('R/model.R')
plot(incidenceUpper, case='Upper Bound')
source('R/model.R')
plot(incidenceUpper, case='Upper Bound')
plot.backprojc
plot.backproj
x=incidenceUpper
obs <- !is.na(x$y)
obs
tt = as.numeric(names(x[obs]))
tt
tt = as.numeric(names(x[!obs]))
obs
names(obs)
as.numeric(names(x$y[obs]))
as.numeric(names(x$y[obs]))->tt
source('R/model.R')
plot(incidenceUpper, case='Upper Bound')
hist(incidenceUpper$y-incidenceBase$y)
summary(incidenceUpper$y-incidenceBase$y)
summary(incidenceUpper$lambda-incidenceBase$lambda)
hist(incidenceUpper$lambda-incidenceBase$lambda)
plot(incidenceBase$lambda)
lines(incidenceUpper$lambda, col='red')
sum(incidenceBase$lambda)
sum(incidenceUpper$lambda)
undiagnosedBase <- estimateUndiagnosed(incidenceBase)
undiagnosedUpper <- estimateUndiagnosed(incidenceUpper)
undiagnosedBase
undiagnosedUpper
results <- combineCases(list(base_case=list(incidenceBase,
undiagnosedBase),
upper_bound=list(incidenceUpper,
undiagnosedUpper)))
x=list(base_case=list(incidenceBase,
undiagnosedBase),
upper_bound=list(incidenceUpper,
undiagnosedUpper))
source('R/results.R')
results <- combineResults(list(base_case=list(incidenceBase,
undiagnosedBase),
upper_bound=list(incidenceUpper,
undiagnosedUpper)))
results
x
x$times = NA
names(x)
times <- as.numeric(names(x[[1]][[1]]$y)[!is.na(x[[1]][[1]]$y])
x[[1]]
x[[1]]$y
x[[1]][[1]]$y
as.numeric(names(x[[1]][[1]]$y)[!is.na(x[[1]][[1]]$y])])
as.numeric(names(x[[1]][[1]]$y)[!is.na(x[[1]][[1]]$y]))
as.numeric(names(x[[1]][[1]]$y)[!is.na(x[[1]][[1]]$y)]))
allTimes <- as.numeric(names(x[[1]][[1]]$y))
allTimes
times <- allTimes[!is.na(allTimes)]
times
x$diagnoses <- x[[1]][[1]]$y[!is.na(allTimes)]
x$diagnoses
names(x)
names(x)%in%c('times', 'diagnoses')
names(x)[!names(x)%in%c('times', 'diagnoses')]
is.vector(diagnoses)
is.vector(x$diagnoses)
length(undiagnosedBase)
obsTimes <- !is.na(allTimes)
incidence <- x[[c]][[1]]$lambda[obsTimes]
c='base_case'
incidence <- x[[c]][[1]]$lambda[obsTimes]
incidence
length(incidence)
undiagnosed <- x[[c]][[2]][obsTimes]
length(undiagnosed)
undiagnosed
x[[c]] <- list(Incidence=incidence, Undiagnosed=undiagnosed)
c
names(x)
x
source('R/results.R')
results <- combineResults(list(base_case=list(incidenceBase,
undiagnosedBase),
upper_bound=list(incidenceUpper,
undiagnosedUpper)))
results
source('R/results.R')
results <- combineResults(list(`Base Case`=list(incidenceBase,
undiagnosedBase),
`Upper Bound`=list(incidenceUpper,
undiagnosedUpper)))
names(x)
results <- combineResults(list(`Base Case`=list(incidenceBase,
undiagnosedBase),
`Upper Bound`=list(incidenceUpper,
undiagnosedUpper)))
x
source('R/results.R')
source('R/results.R')
results <- combineResults(list(`Base Case`=list(incidenceBase,
undiagnosedBase),
`Upper Bound`=list(incidenceUpper,
undiagnosedUpper)))
x$incidence <- data.frame(time=times,var="# Diagnosed  ",value=x$diagnoses)
x$incidence
for (c in cases) {
x$incidence  <- rbind(x$incidence,
data.frame(time=times,
var=paste0("Incidence (", c, ")  "),
value=x[[c]]$incidence))
}
cases
cc=cases[1]
paste0("Incidence (", c, ")  ")
head(data.frame(time=times,
var=paste0("Incidence (", c, ")  "),
value=x[[c]]$incidence))
x[[c]]$incidence
x[[cc]]$incidence
cc
head(x[[c]])
source('R/results.R')
results <- combineResults(list(`Base Case`=list(incidenceBase,
undiagnosedBase),
`Upper Bound`=list(incidenceUpper,
undiagnosedUpper)))
data.frame(time=times,
var=paste0("Incidence (", c, ")  "),
value=x[[c]]$incidence)
x$incidence <- data.frame(time=times,var="# Diagnosed  ",value=x$diagnoses)
for (c in cases) {
x$incidence  <- rbind(x$incidence,
data.frame(time=times,
var=paste0("Incidence (", c, ")  "),
value=x[[c]]$incidence))
}
x$incidence
cc=cases[1]
x[[cc]]
x[[cc]]$incidence
data.frame(time=times,
var=paste0("Incidence (", c, ")  "),
value=x[[c]]$incidence)
x$incidence  <- rbind(x$incidence,
data.frame(time=times,
var=paste0("Incidence (", c, ")  "),
value=x[[c]]$incidence))
x
source('R/results.R')
source('R/results.R')
results <- combineResults(list(`Base Case`=list(incidenceBase,
undiagnosedBase),
`Upper Bound`=list(incidenceUpper,
undiagnosedUpper)))
x$incidence
source('R/results.R')
source('R/results.R')
results <- combineResults(list(`Base Case`=list(incidenceBase,
undiagnosedBase),
`Upper Bound`=list(incidenceUpper,
undiagnosedUpper)))
head(results$results)
head(results$resultsAll)
tail(results$resultsAll)
names(results)
results[[1]]
source('R/results.R')
plot(results)
p <- ggplot(d,aes(x=time,y=value,group=var)) +
geom_line(aes(alpha=var, color=var)) +
geom_point(aes(color=var)) +
scale_alpha_manual(values=c(.5,1,1,1),name="") +
scale_linetype_manual(name="",values=c(3,1,2,2)) +
theme_bw()+
theme(legend.position='bottom',axis.text.x=element_text(angle=90)) +
scale_color_hue(name="") +
scale_x_continuous(breaks=seq(min(d$time),max(d$time),by=2))+
xlab("Time") + ylab("Counts") +
facet_grid(group~., scales='free_y')
d = as.data.frame(d)
d
class(d) = data.frame
source('R/results.R')
results <- combineResults(list(`Base Case`=list(incidenceBase,
undiagnosedBase),
`Upper Bound`=list(incidenceUpper,
undiagnosedUpper)))
plot(results)
d=results$resultsAll
p <- ggplot(d,aes(x=time,y=value,group=var)) +
geom_line(aes(alpha=var, color=var)) +
geom_point(aes(color=var)) +
scale_alpha_manual(values=c(.5,1,1,1),name="") +
scale_linetype_manual(name="",values=c(3,1,2,2)) +
theme_bw()+
theme(legend.position='bottom',axis.text.x=element_text(angle=90)) +
scale_color_hue(name="") +
scale_x_continuous(breaks=seq(min(d$time),max(d$time),by=2))+
xlab("Time") + ylab("Counts") +
facet_grid(group~., scales='free_y')
p
str(d)
levels(d$var)
results <- combineResults(list(`Base Case`=list(incidenceBase,
undiagnosedBase),
`Upper Bound`=list(incidenceUpper,
undiagnosedUpper)))
results <- combineResults(list(`Base Case`=list(incidenceBase,
undiagnosedBase),
`Upper Bound`=list(incidenceUpper,
undiagnosedUpper)))
plot(results)
p <- ggplot(d,aes(x=time,y=value,group=var)) +
geom_line(aes(alpha=var, color=var)) +
geom_point(aes(color=var)) +
scale_alpha_manual(values=c(.5,1,1,1),name="") +
scale_linetype_manual(name="",values=c(3,1,2,2)) +
theme_bw()+
theme(legend.position='bottom',axis.text.x=element_text(angle=90)) +
scale_color_hue(name="") +
scale_x_continuous(breaks=seq(min(d$time),max(d$time),by=2))+
xlab("Time") + ylab("Counts") +
facet_grid(group~., scales='free_y')
d=d$resultsAll
class(d)
str(d)
levels(d$var)
source('R/results.R')
results <- combineResults(list(`Base Case`=list(incidenceBase,
undiagnosedBase),
`Upper Bound`=list(incidenceUpper,
undiagnosedUpper)))
plot(results)
str(d)
p <- ggplot(d,aes(x=time,y=value,group=var)) +
geom_line(aes(alpha=var, color=var)) +
geom_point(aes(color=var)) +
scale_alpha_manual(values=c(.5,1,1,1),name="") +
scale_linetype_manual(name="",values=c(3,1,2,2)) +
theme_bw()+
theme(legend.position='bottom',axis.text.x=element_text(angle=90)) +
scale_color_hue(name="") +
scale_x_continuous(breaks=seq(min(d$time),max(d$time),by=2))+
xlab("Time") + ylab("Counts") +
facet_grid(group~., scales='free_y')
p
p <- ggplot(d,aes(x=time,y=value,group=var)) +
geom_line(aes(alpha=var, color=var)) +
geom_point(aes(color=var)) +
scale_alpha_manual(values=c(.5,1,1),name="") +
scale_linetype_manual(name="",values=c(3,1,2)) +
theme_bw()+
theme(legend.position='bottom',axis.text.x=element_text(angle=90)) +
scale_color_hue(name="") +
scale_x_continuous(breaks=seq(min(d$time),max(d$time),by=2))+
xlab("Time") + ylab("Counts") +
facet_grid(group~., scales='free_y')
p
class(p)
p <- ggplot(d,aes(x=time,y=value,group=var)) +
geom_line(aes(alpha=var, color=var)) +
geom_point(aes(color=var)) +
scale_alpha_manual(values=c(.5,1,1),name="") +
#scale_linetype_manual(name="",values=c(3,1,2)) +
theme_bw()+
theme(legend.position='bottom',axis.text.x=element_text(angle=90)) +
scale_color_hue(name="") +
scale_x_continuous(breaks=seq(min(d$time),max(d$time),by=2))+
xlab("Time") + ylab("Counts") +
facet_grid(group~., scales='free_y')
p
class(d)
str(d)
source('R/results.R')
results <- combineResults(list(`Base Case`=list(incidenceBase,
undiagnosedBase),
`Upper Bound`=list(incidenceUpper,
undiagnosedUpper)))
library(plyr)
results <- combineResults(list(`Base Case`=list(incidenceBase,
undiagnosedBase),
`Upper Bound`=list(incidenceUpper,
undiagnosedUpper)))
results$resultsSummary
TIDs
names(TIDobject)
names(TIDs)
x[[1]]
x=TIDs
x[[1]]
lapply(x[[1]], length)
head(x[[1]]$pdf)
75*0.25
c='base_case'
x[[c]]
intLength*(0:length(x[[c]]$pdf))
intLength=0.25
intLength*(0:length(x[[c]]$pdf))
intLength*(0:length(x[[c]]$pdf))->tt
length(tt)
length(x[[c]]$pdf)
intLength*(0:(length(x[[c]]$pdf)-1))
source('R/tid.R')
TIDs <- estimateTID(KCsim$infPeriod, intLength=diagInterval)
TIDs
plot(TIDs)
plot(TIDs, intLength=0.25)
d
source('R/tid.R')
plot(TIDs, intLength=0.25)
plot(TIDs, intLength=0.25)
p <- ggplot(d) + geom_line(aes(x=Time,y=value,color=var)) +
scale_color_hue(name="") +
theme_bw() +
ylab("Undiagnosed Fraction") +
xlab("Years Since Infection") +
scale_x_continuous(expand=c(0,.2))
theme(legend.position=legendpos)
facet_grid(.~group, scales='free_y')
p <- ggplot(d) + geom_line(aes(x=Time,y=value,color=var)) +
scale_color_hue(name="") +
theme_bw() +
ylab("Undiagnosed Fraction") +
xlab("Years Since Infection") +
scale_x_continuous(expand=c(0,.2))
theme(legend.position=legendpos)
facet_grid(.~group, scales='free_y')
source('~/Dropbox/School/PhD/HIV_WA/public/package1.0/HIVBackCalc/R/tid.R', echo=TRUE)
plot(TIDs, intLength=0.25)
p <- ggplot(d) + geom_line(aes(x=Time,y=value,color=var)) +
scale_color_hue(name="") +
theme_bw() +
ylab("Undiagnosed Fraction") +
xlab("Years Since Infection") +
scale_x_continuous(expand=c(0,.2)) +
theme(legend.position=legendpos) +
facet_grid(.~group, scales='free_y')
p
p <- ggplot(d) + geom_line(aes(x=Time,y=value,color=var)) +
scale_color_hue(name="") +
theme_bw() +
ylab("Undiagnosed Fraction") +
xlab("Years Since Infection") +
scale_x_continuous(expand=c(0,.2)) +
theme(legend.position=legendpos) +
facet_grid(group~., scales='free_y')
p
source('~/Dropbox/School/PhD/HIV_WA/public/package1.0/HIVBackCalc/R/tid.R', echo=TRUE)
plot(TIDs)
plot(TIDs, intLength=0.25)
source('R/tid.R')
plot(TIDs, intLength=0.25)
source('R/tid.R')
plot(TIDs, intLength=0.25)
plot(TIDs, intLength=0.25)->p
p+ylab("")
plot(TIDs, intLength=diagInterval,
cases = c('Base Case', 'Upper Bound'))
source('R/tid.R')
plot(TIDs, intLength=diagInterval,
cases = c('Base Case', 'Upper Bound'))
TIDs
lapply(TIDs[[1]], length)
lapply(TIDs[[2]], length)
years <- intLength*(0:length(x[[1]]$pdf))
years
times
times =c(0, 0.25, 1, 5, 10)
times
times%in%years
TIDs
mod(times, intLength)
?mod
5%4
5%%4
times%%intLength
thesetimes =  years%in%times
thesetimes
times
length(x)
d=data.frame(Time=times)
d
for (i in 1:ncases) {
d <- cbind(d, x[[i]]$pdf[thesetimes], 1-x[[i]]$cdf[thesetimes])
}
ncases=2
for (i in 1:ncases) {
d <- cbind(d, x[[i]]$pdf[thesetimes], 1-x[[i]]$cdf[thesetimes])
}
d
cases
cases=c('Base Case', 'Upper Bound')
paste(cases, c(1,2))
paste(cases, rep(c(1,2),2))
colnames(d) <- c('Time', paste(cases, rep(c('f(x)', 'S(x)'), ncases)))
d
source('R/tid.R')
TIDs <- estimateTID(KCsim$infPeriod, intLength=diagInterval)
summary(TIDs, intLength=diagInterval,
cases = c('Base Case', 'Upper Bound'),
times =c(0, 0.25, 1, 5, 10, 18))
source('R/tid.R')
summary(TIDs, intLength=diagInterval,
cases = c('Base Case', 'Upper Bound'),
times =c(0, 0.25, 1, 5, 10, 18))
replicate(cases, 3)
replicate(3, cases)
c(replicate(3, cases))
replicate(3, cases)->tt
apply(tt,1,c)
apply(tt,1,FUN=c)
apply(tt,1,FUN=())
apply(tt,1,FUN=()
apply(tt,1,FUN='(')
tt
apply(tt,1,FUN='c')
as.vector(tt)
as.vector(t(tt))
colnames(d) <- c('Time', paste(as.vector(t(replicate(2,cases))),
c('f(x)', 'S(x)'))
)
d
?within
source('R/results.R')
source('R/results.R')
results <- combineResults(list(`Base Case`=list(incidenceBase,
undiagnosedBase),
`Upper Bound`=list(incidenceUpper,
undiagnosedUpper)))
x$resultsSummary <- ddply(x$resultsAll, .(var, group), function(x) c(summary(x$value)))
x$resultsSummary
x$resultsSummary <- within(x$resultsSummary, {
x$group[x$group=='Diagnoses and Incidence' &
x$var=='# Diagnosed'] <- 'Diagnoses'
x$group[x$group=='Diagnoses and Incidence'] <- 'Incidence'
})
x$resultsSummary
x$resultsSummary <- ddply(x$resultsAll, .(var, group), function(x) c(summary(x$value)))
x$resultsSummary
x$resultsSummary <- within(x$resultsSummary, {
group[group=='Diagnoses and Incidence' &
var=='# Diagnosed'] <- 'Diagnoses'
group[group=='Diagnoses and Incidence'] <- 'Incidence'
})
x$resultsSummary <- ddply(x$resultsAll, .(var, group), function(x) c(summary(x$value)))
x$resultsSummary <- within(x$resultsSummary, {
group[group=='Diagnoses and Incidence' &
var=='# Diagnosed'] <- 'Diagnoses'
group[group=='Diagnoses and Incidence'] <- 'Incidence'
})
x$resultsSummary
x$resultsSummary <- ddply(x$resultsAll, .(var, group), function(x) c(summary(x$value)))
str(x$resultsSummary)
x$resultsSummary <- within(x$resultsSummary, {
group=as.character(group)
group[group=='Diagnoses and Incidence' &
var=='# Diagnosed'] <- 'Diagnoses'
group[group=='Diagnoses and Incidence'] <- 'Incidence'
})
x$resultsSummary
colnames(x$resultsSummary)[1:2] <- c('Diagnoses/Case', 'Estimate')
x$resultsSummary
class(KCsim)
